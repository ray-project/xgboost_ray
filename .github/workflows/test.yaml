name: pytest on push

on:
  push:
  pull_request:
  schedule:
    - cron: "0 5 * * *"

jobs:
  test_lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install -U yapf==0.23.0 flake8==3.7.7 flake8-comprehensions flake8-quotes==2.0.0
    - name: Print environment info
      run: |
        ./xgboost_ray/tests/env_info.sh
    - name: Run format script
      run: |
        ./format.sh --all

  test_linux_ray_master:
    runs-on: ubuntu-latest
    timeout-minutes: 160
    strategy:
      matrix:
        python-version: [3.6.9, 3.7, 3.8]
        include:
          - python-version: 3.6.9
            ray-wheel: https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp36-cp36m-manylinux2014_x86_64.whl
          - python-version: 3.7
            ray-wheel: https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp37-cp37m-manylinux2014_x86_64.whl
          - python-version: 3.8
            ray-wheel: https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp38-cp38-manylinux2014_x86_64.whl
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install -U ${{ matrix.ray-wheel }}
        if [ -f requirements-test.txt ]; then python -m pip install -r requirements-test.txt; fi
    - name: Install package
      run: |
        python -m pip install -e .
    - name: Print environment info
      run: |
        ./xgboost_ray/tests/env_info.sh
    - name: Run tests
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 45
        max_attempts: 3
        command: bash ./run_ci_tests.sh
    - name: Run examples
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: bash ./run_ci_examples.sh

  test_linux_ray_release:
    runs-on: ubuntu-latest
    timeout-minutes: 160
    strategy:
      matrix:
        python-version: [3.6.9, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install -U ray
        if [ -f requirements-test.txt ]; then python -m pip install  -r requirements-test.txt; fi
    - name: Install package
      run: |
        python -m pip install -e .
    - name: Print environment info
      run: |
        ./xgboost_ray/tests/env_info.sh
    - name: Run tests
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 45
        max_attempts: 3
        command: bash ./run_ci_tests.sh
    - name: Run examples
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: bash ./run_ci_examples.sh

  test_linux_compat:
    # Test compatibility when some optional libraries are missing
    # Test runs on latest ray release
    runs-on: ubuntu-latest
    timeout-minutes: 160
    strategy:
      matrix:
        python-version: [3.6.9, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install -U ray
        if [ -f requirements-test.txt ]; then python -m pip install -r requirements-test.txt; fi
    - name: Uninstall unavailable dependencies
      # Disables modin and Ray Tune (via tabulate)
      run: |
        python -m pip uninstall -y modin
        python -m pip uninstall -y tabulate
    - name: Install package
      run: |
        python -m pip install -e .
    - name: Print environment info
      run: |
        ./xgboost_ray/tests/env_info.sh
    - name: Run tests
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 45
        max_attempts: 3
        command: bash ./run_ci_tests.sh --no-tune
    - name: Run examples
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: bash ./run_ci_examples.sh --no-tune

  test_linux_cutting_edge:
    # Tests on cutting edge, i.e. latest Ray master, latest XGBoost master
    runs-on: ubuntu-latest
    timeout-minutes: 160
    strategy:
      matrix:
        # no new versions for xgboost are published for 3.6
        python-version: [3.7, 3.8]
        include:
          - python-version: 3.7
            ray-wheel: https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp37-cp37m-manylinux2014_x86_64.whl
          - python-version: 3.8
            ray-wheel: https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp38-cp38-manylinux2014_x86_64.whl
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install -U ${{ matrix.ray-wheel }}
        if [ -f requirements-test.txt ]; then python -m pip install -r requirements-test.txt; fi
    - name: Install Ubuntu system dependencies
      run: |
        sudo apt-get install -y --no-install-recommends ninja-build
    - name: Install package
      run: |
        python -m pip install -e .
    - name: Clone XGBoost repo
      uses: actions/checkout@v2
      with:
        repository: dmlc/xgboost
        path: xgboost
        submodules: true
    - name: Install XGBoost from source
      shell: bash -l {0}
      run: |
        pushd ${GITHUB_WORKSPACE}/xgboost/python-package
        python --version
        python setup.py sdist
        pip install -v ./dist/xgboost-*.tar.gz
        popd
    - name: Print environment info
      run: |
        ./xgboost_ray/tests/env_info.sh
    - name: Run tests
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 45
        max_attempts: 3
        command: bash ./run_ci_tests.sh
    - name: Run examples
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: bash ./run_ci_examples.sh

  test_linux_xgboost_legacy:
    # Tests on XGBoost 0.90 and latest Ray release
    runs-on: ubuntu-latest
    timeout-minutes: 160
    strategy:
      matrix:
        python-version: [3.6.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install -U ray
        if [ -f requirements-test.txt ]; then python -m pip install  -r requirements-test.txt; fi
    - name: Install package
      run: |
        python -m pip install -e .
    - name: Install legacy XGBoost
      run: |
        python -m pip install xgboost==0.90
    - name: Print environment info
      run: |
        ./xgboost_ray/tests/env_info.sh
    - name: Run tests
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 45
        max_attempts: 3
        command: bash ./run_ci_tests.sh
    - name: Run examples
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: bash ./run_ci_examples.sh
